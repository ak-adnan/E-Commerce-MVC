@model List<CartDetails>

<h1 class=" mt-3 mb-4"  >Your Cart</h1>

<div class="row">
    <div class="col-md-8">
        <!-- Cart Details -->
        <table class="table">
            <thead>
                <tr>
                    <th>Product Name</th>
                    <th>Unit Price (tk)</th>
                    <th>Quantity </th>
                    <th>Total Price(tk)</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td><img src="@item.Product.ImageUrl" alt="@item.Product.Name" style="max-width: 65px;" />@item.Product.Name</td>
                        <td data-unitprice="@item.Product.Price">@item.Product.Price</td>
                        <td>
                            <!-- Plus and minus icons for quantity -->
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-primary" onclick="decreaseQuantity(@item.CartDetailsId)">
                                    <i class="bi bi-dash-lg"></i>
                                </button>
                                <span id="quantity_@item.CartDetailsId" class="btn btn-light quantity">@item.Quantity</span>
                                <button type="button" class="btn btn-primary" onclick="increaseQuantity(@item.CartDetailsId)">
                                    <i class="bi bi-plus-lg"></i>
                                </button>
                            </div>
                        </td>
                        <td class="total-price" id="totalPrice_@item.CartDetailsId" data-cartdetailsid="@item.CartDetailsId">0.00</td>
                        <td>
                            <!-- Add a button to remove the item -->
                            <i class="bi bi-trash-fill" onclick="removeItem(@item.CartDetailsId)" style="font-size:15px;color:red;"></i><i></i>

                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
    <div class="col-md-4">
        <!-- Cart Summary -->
        <div class="card">
            <div class="card-body">
                <h5 class="card-title mb-4" style="text-align:center">Cart Summary</h5>
                <ul class="list-group" id="cartSummary">
                    <!-- List of items in the cart with names, images, and total prices -->
                </ul>
                <hr>
                <p class="card-text">Total Payment(tk): <strong><span id="totalPriceSpan" style="margin-left:160px">$0.00</span></p></strong>

                <!-- Checkout buttons -->
                << <a class="" href="/Home/Index" style="color: #FD5602"> Continue Shopping </a> <span>
                    <button class="btn btn-success" id="placeOrderBtn" style="margin-left:75px;">Place Order</button>
                </span>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>

        function removeItem(cartDetailsId) {
            $.ajax({
                url: '/ShoppingCart/RemoveFromCart',
                method: 'POST',
                data: { cartDetailsId: cartDetailsId },
                success: function () {
                    // Reload the cart page or update the cart items in real-time
                    location.reload();
                },
                error: function () {
                    alert('Failed to remove the product from the cart');
                }
            });
        }

        function decreaseQuantity(cartDetailsId) {
            var quantityElement = $('#quantity_' + cartDetailsId);
            var currentQuantity = parseInt(quantityElement.text(), 10);
            if (currentQuantity > 1) {
                var newQuantity = currentQuantity - 1;
                quantityElement.text(newQuantity);
                updateTotalPrice(cartDetailsId, newQuantity);
            }
        }

        function increaseQuantity(cartDetailsId) {
            var quantityElement = $('#quantity_' + cartDetailsId);
            var currentQuantity = parseInt(quantityElement.text(), 10);
            var newQuantity = currentQuantity + 1;
            quantityElement.text(newQuantity);
            updateTotalPrice(cartDetailsId, newQuantity);
        }

        function updateTotalPrice(cartDetailsId, newQuantity) {
            var unitPrice = parseFloat($('#quantity_' + cartDetailsId).closest('tr').find('td[data-unitprice]').data('unitprice'));
            var totalPriceElement = $('#totalPrice_' + cartDetailsId);
            var totalPrice = unitPrice * newQuantity;
            totalPriceElement.text(totalPrice.toFixed(2));

            // Update the cart summary when the total price changes
            updateCartSummary();
        }

        // Function to update the cart summary with items and quantities
        function updateCartSummary() {
            var cartSummary = '';

            // Iterate through all items in the cart
            $('.total-price').each(function () {
                var itemName = $(this).closest('tr').find('td:first').text();
                var totalPrice = parseFloat($(this).text());
                cartSummary += '<li class="list-group-item" style=" font-size: 15px" >' + itemName + ' (Total Price: ' + totalPrice + ' tk)</li>';
            });

            // Update the cart summary displayed in the ul element
            $('#cartSummary').html(cartSummary);

            // Update the total cost when the cart summary changes
            updateTotalCost();
        }

        // Function to calculate and update the total cost
        function updateTotalCost() {
            var totalCost = 0;

            // Iterate through all items in the cart
            $('.total-price').each(function () {
                totalCost += parseFloat($(this).text());
            });

            // Update the total cost displayed in the span
            $('#totalPriceSpan').text(totalCost);
        }

        $(document).ready(function () {
            // Call the updateTotalPrice function for each item initially
            $('.total-price').each(function () {
                var cartDetailsId = $(this).data('cartdetailsid');
                var quantity = parseInt($('#quantity_' + cartDetailsId).text(), 10);
                updateTotalPrice(cartDetailsId, quantity);
            });
        });

        // Initialize the cart summary when the page loads
        updateCartSummary();
.

            // Handle the "Place Order" button click event
            $('#placeOrderBtn').on('click', function () {
                // Create an order object with necessary data
                var orderData = {
                    userId: 1, // Replace with the actual user ID
                    orderDate: null, // Will be set on the server
                    orderStatusId: 1, // Replace with the appropriate order status ID
                    totalAmount: parseFloat($('#totalPriceSpan').text().replace('$tk', '')), // Parse the total amount
                    /orderDetails: [] // Add order details if needed
                };

                // Send a POST request to the server to place the order
                $.ajax({
                    url: '/Myorder/PlaceOrders',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(orderData),
                    success: function (orderId) {
                        // Handle success, e.g., redirect to a thank-you page
                        alert('Order placed successfully. Order ID: ' + orderId);
                        window.location.href = '/Order/ThankYou/' + orderId;
                    },
                    error: function () {
                        alert('Failed to place the order.');
                    }
                });
            });
        });


    </script>
}
